(define (cube x) (* x x x))
(define (p x) (- (* 3 x) (* 4 (cube x))))
(define (sine angle)
  (if (not (> (abs angle) 0.1))
      angle
      (p (sine (/ angle 3.0)))))

; a. How many times is the procedure p applied when
;    (sine 12.15) is evaluated?
;
; A: Each iteration in (sine angle) will cause the new angle,
;    angle-prime to be called twice with angle/3.
;    This means that the algorithm will iterate until angle/3 is
;    not greater than 0.1. We will then want to calculate how 
;    many times 3 can go into 12.15.
;
;    (/ (/ (/ (/ (/ 12.15 3) 3) 3) 3) 3)
;    ;4.9999999999999e-2 (first iteration less than 1-e1)
;
;    Thus, p will be applied 5 times (per top level divison).

; b. What is the order of growth in space and number of steps
;    (as a function of a) used by the process generated by the
;     sine procedure when (sine a) is evaluated?
;
; A: Space/Steps:
;    The function will continue to run until angle is less than 0.1.
;    Angle will get smaller by 3 each iteration.
;    We can interpret this as (ceiling (log-base-3 (/ a 0.1))).
;    This is ultimately THETA(log(n))




